// Generated by Dagger (https://dagger.dev).
package com.prestosoftware.test.di;

import android.app.Application;
import com.prestosoftware.test.rappi.data.db.TestDb;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class PersistenceModule_ProvideDatabaseFactory implements Factory<TestDb> {
  private final PersistenceModule module;

  private final Provider<Application> applicationProvider;

  public PersistenceModule_ProvideDatabaseFactory(PersistenceModule module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public TestDb get() {
    return provideDatabase(module, applicationProvider.get());
  }

  public static PersistenceModule_ProvideDatabaseFactory create(PersistenceModule module,
      Provider<Application> applicationProvider) {
    return new PersistenceModule_ProvideDatabaseFactory(module, applicationProvider);
  }

  public static TestDb provideDatabase(PersistenceModule instance, Application application) {
    return Preconditions.checkNotNull(instance.provideDatabase(application), "Cannot return null from a non-@Nullable @Provides method");
  }
}
